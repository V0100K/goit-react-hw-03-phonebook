{"version":3,"sources":["components/contactListItem/ContactListItem.module.css","components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css","components/filter/Filter.module.css","components/contactForm/ContactForm.jsx","components/contactListItem/ContactListItem.jsx","components/contactList/ContactList.jsx","components/filter/Filter.jsx","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","id","v4","findByName","props","contacts","some","item","toLowerCase","includes","handleSubmit","preventDefault","alert","onSubmit","reset","this","className","s","form","type","pattern","title","required","onChange","Component","ContactListItem","onDeletContact","contactListItem","contact","buttonDelete","onClick","ContactList","list","map","Filter","filter","App","deleteContact","contactId","prevState","formSubmitHandler","changeFilter","getVisibleContacts","normalizedFilter","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c4c7ae5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactListItem_contactListItem__2yWdE\",\"contact\":\"ContactListItem_contact__1o58B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2RSf1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3Ln0h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3vXsm\"};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { v4 } from \"uuid\";\nimport s from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  static propTypes = {\n    contacts: PropTypes.array.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ id: v4(), [name]: value });\n  };\n\n  findByName = (name) => {\n    return this.props.contacts.some((item) =>\n      item.name.toLowerCase().includes(name.toLowerCase())\n    );\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { name } = this.state;\n\n    if (this.findByName(name)) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. \"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactListItem.module.css\";\n\nconst ContactListItem = ({ name, number, id, onDeletContact }) => (\n  <li className={s.contactListItem}>\n    <p className={s.contact}>\n      {\" \"}\n      {name}: {number}\n    </p>\n    <button\n      className={s.buttonDelete}\n      type=\"button\"\n      onClick={() => onDeletContact(id)}\n    >\n      Delete\n    </button>\n  </li>\n);\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeletContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactListItem from \"../contactListItem/ContactListItem\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onDeletContact }) => (\n  <ul className={s.list}>\n    {contacts.map(({ id, name, number }) => (\n      <ContactListItem\n        key={id}\n        id={id}\n        name={name}\n        number={number}\n        onDeletContact={onDeletContact}\n      />\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeletContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        className={s.filter}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/contactForm\";\nimport ContactList from \"./components/contactList\";\nimport Filter from \"./components/filter\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n  componentDidMount() {\n    const contact = JSON.parse(localStorage.getItem(\"contact\"));\n    if (contact) {\n      this.setState({ contacts: contact });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contact\", JSON.stringify(this.state.contacts));\n    }\n  }\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  formSubmitHandler = ({ id, name, number }) => {\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, { id, name, number }],\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm contacts={contacts} onSubmit={this.formSubmitHandler} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onChange={this.changeFilter}\n          onDeletContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}